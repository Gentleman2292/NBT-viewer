plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

configurations {
	rusherhackApi
	rusherhackApi.canBeResolved(true)
	compileOnly.extendsFrom(rusherhackApi)
}

repositories {

	maven {
		name = "rusherhack"
		url = "https://maven.rusherhack.org/snapshots"
	}
	mavenCentral()
}

dependencies {

	// Fabric
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	//other libs
	rusherhackApi "org.rusherhack:rusherhack-api:1.20.1-SNAPSHOT"
}

loom {

	//apply accesswidener from rusherhack-api
	for (final def f in zipTree(this.project.configurations.rusherhackApi.singleFile)) {
		if(f.name == "rusherhack.accesswidener") {
			accessWidenerPath = f
		}
	}

	//disable run configs
	runConfigs.configureEach {
		ideConfigGenerated = false
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
}

jar {
	manifest {
		//attributes.clear()
		attributes(
				"Minecraft-Version": project.minecraft_version
		)
	}
}